@using Makeup_1.Models.ViewModels.ImageViewModels
@model CreateImageViewModel


@{
    ViewData["Title"] = "Create";
}

<h1>Створити</h1>

<h4>Зображення</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div class="form-group" id="categories">
                <label asp-for="Categories" class="control-label"></label>
                <select asp-items="@Model.Categories" onchange="onCategoriesChange(event)" class="form-select"></select>
                <span asp-validation-for="Categories" class="text-danger"></span>
            </div>
           
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Filename" class="control-label"></label>
                <input asp-for="Filename" class="form-control" />
                <span asp-validation-for="Filename" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Image" class="control-label"></label>
                <input asp-for="Image" type="file" class="form-control" multiple/>
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Створити" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Повернутися до списку</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        async function selectProduct(categoryId){
            const resp = await fetch(`/images/getProductByCategory/${categoryId}`);
            if(resp.ok===true){
                let data = await resp.text();
                let categoriesDiv = document.getElementById("categories");
                let form =categoriesDiv.parentElement;
                let div = document.createElement("div");
                div.classList.add("form-group");
                div.innerHTML = data;
                form.insertBefore(div, categoriesDiv.nextSibling);
                //categoriesDiv.after(data);
            }
        }
        async function onCategoriesChange(e){
            let categoriesId = e.target.value;
            await selectProduct(categoriesId);
        }
        </script>
}
