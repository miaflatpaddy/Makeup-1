@using Makeup_1.Models.ViewModels.CartVievModels
@model CartIndexViewModel
@{
    int i = 0;
}
@section PageStyles{
    <style>
        .product-price {
            font-size: 30px;
            font-weight: 500;
            text-align: end;
        }

        .product-name {
            font-size: 16px;
            font-weight: 500;
        }

        .product-count-btn {
            cursor: pointer;
        }

        #totalSum {
            font-size: 24px;
            font-weight: 500;
        }

            #totalSumText {
                font-size: 36px;
                text-align: end;
            }

        #cartButtons a {
            text-decoration: none;
            border-width: 1px;
            border-radius: 5px;
            border-style: solid;
            border-color: rgba(141, 152, 144, 1);
            padding: 10px 20px;
            color: rgba(141, 152, 144, 1);
            font-size: 16px;
            font-weight: 500;
        }

        #cartButtons button {
            border-radius: 5px;
            border-style: solid;
            border-color: rgba(141, 152, 144, 1);
            padding: 10px 20px;
            background-color: rgba(141, 152, 144, 1);
            color: white;
            font-size: 16px;
            font-weight: 500;
        }
        .removeFromCartBtn{
            border: none;
        }
    </style>
}
<div class="row border-2 border-bottom py-3" style="align-items: center;">
    <div class="col"></div>
    <div class="col-1">кількість</div>
    <div class="col-2 text-end">вартість</div>
    <!-- <div class="col-1"></div> -->
    <div class="col-1"></div>
</div>
@foreach (CartItem item in Model.Cart.CartItems)
{
    <div class="row border-2 border-bottom py-3" style="align-items: center;">
        <div class="col-1">
            @if (@item.Product.Images.Count >= 1)
            {
                <img class="w-100" src="data:image/*;base64,@(Convert.ToBase64String(item.Product.Images?.FirstOrDefault()!.File))" alt="@item.Product.Name" style="border-radius: 10px;">

            }
        </div>
        <div class="col-1"></div>
        <div class="col">@item.Product.Name</div>
        <div class="col-1 d-flex border" style="text-align: center;">
            <span class="flex-fill p-2 product-count-btn" onclick="decCount(event, @item.Product.Id)">-</span>
            <span class="flex-fill p-2">@item.Quantity</span>
            <span class="flex-fill p-2 product-count-btn" onclick="incCount(event, @item.Product.Id)">+</span>
        </div>
        <div class="col-2 product-price">@(item.Product.Price * item.Quantity) ₴</div>
        <!-- <div class="col-1"></div> -->
        <div class="col-1">
            <form asp-action="RemoveFromCart" method="post" asp-controller="cart">
                <input type="hidden" name="id" value="@item.Product.Id" />
                <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
                <button type="submit" style="color: black;" class="removeFromCartBtn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                        <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z" />
                    </svg>
                </button>
            </form>
        </div>
    </div>
}
<div id="totalSum" class="row align-items-center">
    @* <div class="row"> *@
        <div class="col"></div>
        <div class="col-2">загальна сума:</div>
        <div id="totalSumText" class="col-2">@Model.Cart.GetTotalSum() ₴</div>
   @*  </div> *@
    
    
</div>
<div class="d-flex justify-content-between mt-5" id="cartButtons">
    <a href="@Model.ReturnUrl">Повернутися до покупок</a>
    <form asp-action="ConfirmOrder" method="post">
        <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
        <button type="submit">Оформити замовлення</button>
    </form>
    @*  <a href="#">Оформити замовлення</a> *@
</div>
@section Scripts{
    <script>
        async function incCount(e, productId) {
            let resp = await fetch(`/cart/incCount/${productId}`, { method: "post" });
            if (resp.ok === true) {
                let data = await resp.json();
                let countElem = e.target.previousElementSibling;
                // let count = parseInt(countElem.innerText);
                countElem.innerText = `${data.quantity}`;
                // let p = document.createElement("a");
                let parentDiv = countElem.parentElement;
                let newSumElem = parentDiv.nextElementSibling;
                newSumElem.innerText = `${data.sum} ₴`; 
                await getTotalSum();
            }
        }
        async function decCount(e, productId) {
            let countElem = e.target.nextElementSibling;
            let count = parseInt(countElem.innerText);
            console.log(count);
            if (count <= 1)
                return;
            let resp = await fetch(`/cart/decCount/${productId}`, { method: "post" });
            if (resp.ok === true) {
                let data = await resp.json();
                countElem.innerText = `${data.quantity}`;
                // let p = document.createElement("a");
                let parentDiv = countElem.parentElement;
                let newSumElem = parentDiv.nextElementSibling;
                newSumElem.innerText = `${data.sum} ₴`;
                await getTotalSum();
            }
        }
        async function getTotalSum() {
            let resp = await fetch(`/cart/getTotalSum`, { method: "post" });
            if (resp.ok === true) {
                let data = await resp.json();
                let totalSumElem = document.querySelector("#totalSumText");
                // let totalSumElem = document.querySelector("#totalSum>span");
                totalSumElem.innerText = `${data.totalSum} ₴`;
            }
        }
    </script>
}